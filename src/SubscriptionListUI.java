
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Youngmin
 */
public class SubscriptionListUI extends javax.swing.JFrame {
    
    /**
     * Creates new form NewJFrame
     */
    
    private SubscriptionCtrl subCtrl;
    private ArrayList<Subscription> subUIList;
    private int currentPos;
    
    public SubscriptionListUI(SubscriptionCtrl subCtrl) {
        this.subCtrl = subCtrl;
        this.setTitle("Simple MVC Application");
        initComponents();
        
        // Copy Object list from Controller
        this.subUIList = subCtrl.subList.subscriptionList;
        
        // Get first model object's data
        String initSubscriptionName = subUIList.get(0).getSubscriptionName();
        double initSubscriptionPrice = subUIList.get(0).getSubscriptionPrice();
        currentPos = 0;
        // Show first model object's data
        this.listTextArea.setText("Subscription Name: "+initSubscriptionName+"\n"+"Subscription Price: "+initSubscriptionPrice);
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listTextArea = new javax.swing.JTextArea();
        listNext = new javax.swing.JButton();
        listPrev = new javax.swing.JButton();
        newSubscriptionName = new javax.swing.JTextField();
        newSubscriptionPrice = new javax.swing.JTextField();
        editServiceNameBtn = new javax.swing.JButton();
        editServicePriceBtn = new javax.swing.JButton();
        addNewServiceBtn = new javax.swing.JButton();
        deleteServiceBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listTextArea.setEditable(false);
        listTextArea.setColumns(20);
        listTextArea.setRows(5);
        jScrollPane1.setViewportView(listTextArea);

        listNext.setText("Next");
        listNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listNextActionPerformed(evt);
            }
        });

        listPrev.setText("Previous");
        listPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPrevActionPerformed(evt);
            }
        });

        newSubscriptionName.setText("Enter New Subscription Name");
        newSubscriptionName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newSubscriptionNameMouseClicked(evt);
            }
        });

        newSubscriptionPrice.setText("Enter New Subscription Price");
        newSubscriptionPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newSubscriptionPriceMouseClicked(evt);
            }
        });

        editServiceNameBtn.setText("Change Current Subscription Name");
        editServiceNameBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editServiceNameBtnMouseClicked(evt);
            }
        });

        editServicePriceBtn.setText("Change Current Subscription Price");
        editServicePriceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editServicePriceBtnMouseClicked(evt);
            }
        });

        addNewServiceBtn.setText("Add a New Subscription");
        addNewServiceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewServiceBtnMouseClicked(evt);
            }
        });

        deleteServiceBtn.setText("Delete this Subscription");
        deleteServiceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteServiceBtnMouseClicked(evt);
            }
        });

        resetBtn.setText("Reset");
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteServiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addNewServiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listPrev, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newSubscriptionName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editServiceNameBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newSubscriptionPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listNext, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editServicePriceBtn))))
                .addGap(177, 177, 177))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resetBtn)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newSubscriptionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newSubscriptionPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editServicePriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editServiceNameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addNewServiceBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteServiceBtn)
                .addGap(60, 60, 60)
                .addComponent(resetBtn))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void listPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPrevActionPerformed
        
        String newText = null;
        if(!subUIList.isEmpty()) {
            if(currentPos == 0) {
                // if current shown element in the ArrayList is the first element, show the last element in the ArrayList 
                newText = "Subscription Name: "+subUIList.get(subUIList.size()-1).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(subUIList.size()-1).getSubscriptionPrice();
                currentPos = subUIList.size()-1;
            } else {
                // show previous element in the ArrayList
                newText = "Subscription Name: "+subUIList.get(currentPos-1).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(currentPos-1).getSubscriptionPrice();
                currentPos = currentPos-1;
            }
        
            // Debug purposes
                //System.out.println("Pos: "+currentPos+" "+"Name: "+subUIList.get(currentPos).getSubscriptionName()+" Method: Prev");
            
            // Update TextArea
            this.listTextArea.setText(newText);
        }
    }//GEN-LAST:event_listPrevActionPerformed

    private void listNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listNextActionPerformed
        String newText = null;
        if(!subUIList.isEmpty()) {
            if(currentPos == subUIList.size()-1) {
                // if current shown element in the ArrayList is the last element, show the first element in the ArrayList 
                newText = "Subscription Name: "+subUIList.get(0).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(0).getSubscriptionPrice();
                currentPos = 0;
            } else {
                // show next element in the ArrayList
                newText = "Subscription Name: "+subUIList.get(currentPos+1).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(currentPos+1).getSubscriptionPrice();
                currentPos = currentPos+1;
            }
        
            // Debug purposes
            //System.out.println("Pos: "+currentPos+" "+"Name: "+subUIList.get(currentPos).getSubscriptionName()+" Method: Next");
            
            // Update TextArea
            this.listTextArea.setText(newText);
        }
    }//GEN-LAST:event_listNextActionPerformed

    private void newSubscriptionNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newSubscriptionNameMouseClicked
        if("Enter New Subscription Name".equals(this.newSubscriptionName.getText())) {
            this.newSubscriptionName.setText("");
        }
    }//GEN-LAST:event_newSubscriptionNameMouseClicked

    private void newSubscriptionPriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newSubscriptionPriceMouseClicked
        if("Enter New Subscription Price".equals(this.newSubscriptionPrice.getText())) {
            this.newSubscriptionPrice.setText("");
        }
    }//GEN-LAST:event_newSubscriptionPriceMouseClicked

    private void editServiceNameBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editServiceNameBtnMouseClicked
        
        // Edit data on a single object model
        if("Enter New Subscription Name".equals(this.newSubscriptionName.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Please Enter a New Subscription Name to Edit a Subscription Name or Add a new Subscription", "Error", HEIGHT);
        } else if ("".equals(this.newSubscriptionName.getText().trim())){
            JOptionPane.showMessageDialog(rootPane, "Please Enter a New Subscription Name to Edit a Subscription Name or Add a new Subscription", "Error", HEIGHT);      
        } else {
            subUIList.get(currentPos).setSubscriptionName(this.newSubscriptionName.getText());
        }
        String newText = "Subscription Name: "+subUIList.get(currentPos).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(currentPos).getSubscriptionPrice();
        this.listTextArea.setText(newText);
        this.newSubscriptionName.setText("Enter New Subscription Name");
        
    }//GEN-LAST:event_editServiceNameBtnMouseClicked

    private void editServicePriceBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editServicePriceBtnMouseClicked
        
        // Edit data on a single object model
        if("Enter New Subscription Price".equals(this.newSubscriptionPrice.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Please Enter a New Subscription Price to Edit a Subscription Price or Add a new Subscription", "Error", HEIGHT);
        } else {
            try{
                subUIList.get(currentPos).setSubscriptionPrice(Double.parseDouble(this.newSubscriptionPrice.getText()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Please Enter a Number", "Error", HEIGHT);
            }
            
        }
        String newText = "Subscription Name: "+subUIList.get(currentPos).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(currentPos).getSubscriptionPrice();
        this.listTextArea.setText(newText);
        this.newSubscriptionPrice.setText("Enter New Subscription Price");
    }//GEN-LAST:event_editServicePriceBtnMouseClicked

    private void addNewServiceBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewServiceBtnMouseClicked
        
        Subscription newSubscription = null;
        boolean check = true;
        // Create new Subscription object 
        if("Enter New Subscription Name".equals(this.newSubscriptionName.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Please Enter a New Subscription Name to Edit a Subscription Name or Add a new Subscription", "Error", HEIGHT);
            check = false;
        } else if ("".equals(this.newSubscriptionName.getText().trim())){
            JOptionPane.showMessageDialog(rootPane, "Please Enter a New Subscription Name to Edit a Subscription Name or Add a new Subscription", "Error", HEIGHT);
            check = false;
        } else {
            newSubscription = new Subscription(this.newSubscriptionName.getText());
        }
        
        if("Enter New Subscription Price".equals(this.newSubscriptionPrice.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Please Enter a New Subscription Price to Edit a Subscription Price or Add a new Subscription", "Error", HEIGHT);
            check = false;
        } else {
            try{
                newSubscription.setSubscriptionPrice(Double.parseDouble(this.newSubscriptionPrice.getText()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Please Enter a Number", "Error", HEIGHT);
                check = false;
            }
            
        }
        if(check) {
            subUIList.add(newSubscription);
            // Add Subscription object to ArrayList
            String newText = "Subscription Name: "+subUIList.get(subUIList.size()-1).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(subUIList.size()-1).getSubscriptionPrice();
            currentPos = subUIList.size()-1;
        
            // Show it to UI
            this.listTextArea.setText(newText);
            this.newSubscriptionName.setText("Enter New Subscription Name");
            this.newSubscriptionPrice.setText("Enter New Subscription Price");
            printCurrentSubscriptions();
        }
   
    }//GEN-LAST:event_addNewServiceBtnMouseClicked

    private void deleteServiceBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteServiceBtnMouseClicked
        
        // Clear if the user wants to delete the last element
        if(subUIList.size() == 1) {
            subUIList.clear();
            this.listTextArea.setText("");
        } else if (subUIList.size() > 0){ 
            // Delete Current element
            subUIList.remove(subUIList.get(currentPos));
            String newText = "Subscription Name: "+subUIList.get(0).getSubscriptionName()+"\n"+"Subscription Price: "+subUIList.get(0).getSubscriptionPrice();
            currentPos = 0;
            // Show it to UI
            this.listTextArea.setText(newText);
        } else {
            //Send error message if the list is already empty
            JOptionPane.showMessageDialog(rootPane, "There is nothing to delete", "Error", HEIGHT);
        }
        printCurrentSubscriptions();
    }//GEN-LAST:event_deleteServiceBtnMouseClicked

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        
        // Close current frame and dispose
        setVisible(false);
        dispose();
        
        // Invoke reset
        subCtrl.subUI.reset();
        
    }//GEN-LAST:event_resetBtnMouseClicked
    
    private void printCurrentSubscriptions() {
        
        // Print current arraylist
        System.out.println("List of Subscriptions in the ArrayList");
        for(Subscription i : subUIList) {
            System.out.println(i.getSubscriptionName() + " " + i.getSubscriptionPrice());
        }
        System.out.println("--------------------------------------------");
    }
    
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewServiceBtn;
    private javax.swing.JButton deleteServiceBtn;
    private javax.swing.JButton editServiceNameBtn;
    private javax.swing.JButton editServicePriceBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listNext;
    private javax.swing.JButton listPrev;
    private javax.swing.JTextArea listTextArea;
    private javax.swing.JTextField newSubscriptionName;
    private javax.swing.JTextField newSubscriptionPrice;
    private javax.swing.JButton resetBtn;
    // End of variables declaration//GEN-END:variables
}
